#Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#Importing the dataset (AFTER Preprocessing)
dataset = pd.read_csv('Data.csv')
#only thing to change here is the name of the dataset; This file is very generic!
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

#Splitting dataset into training and test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

#Feature Scaling {DIFFERENT TO LINEAR and Polynomial Regression here}
from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
sc_y = StandardScaler()
X_train = sc_X.fit_transform(X_train)
y_train = sc_y.fit_transform(y_train)

#Training SVR regression model on training set 
from sklearn.svm import SVR
regressor = SVR(kernel = 'rbf')
regressor.fit(X_train, y_train)

#Predicting test set results 
y_pred = sc_y.inverse_transform(regressor.predict(sc_X.transform(X_test)).reshape(-1,1))
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

#Evaluate model performance (R^2 here)
from sklearn.metrics import r2_score
#to find similar functions check online information about scikitlearn: https://scikit-learn.org/stable/api/index.html
r2_score(y_test, y_pred)