#Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#Importing the dataset (AFTER Preprocessing)
dataset = pd.read_csv('Data.csv')
#only thing to change here is the name of the dataset; This file is very generic!
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

#Splitting dataset into training and test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

#Training regression model on training set {DIFFERENT TO LINEAR REGRESSION HERE}
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
poly_reg = PolynomialFeatures(degree = 4)
X_poly = poly_reg.fit_transform(X_train)
regressor = LinearRegression()
regressor.fit(X_poly, y_train)

#Predicting test set results {DIFFERENT TO LINEAR REGRESSION HERE}
y_pred = regressor.predict(poly_reg.transform(X_test))
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

#Evaluate model performance (R^2 here)
from sklearn.metrics import r2_score
#to find similar functions check online information about scikitlearn: https://scikit-learn.org/stable/api/index.html
r2_score(y_test, y_pred)